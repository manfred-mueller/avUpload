//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace avUpload.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("avUpload.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die About ähnelt.
        /// </summary>
        public static string About {
            get {
                return ResourceManager.GetString("About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Another instance is already running! ähnelt.
        /// </summary>
        public static string AnotherInstanceIsAlreadyRunning {
            get {
                return ResourceManager.GetString("AnotherInstanceIsAlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Avast whitelisting program registration form ähnelt.
        /// </summary>
        public static string AvastWhitelistingProgramRegistrationForm {
            get {
                return ResourceManager.GetString("AvastWhitelistingProgramRegistrationForm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Icon ähnlich wie (Symbol).
        /// </summary>
        public static System.Drawing.Icon avUpload {
            get {
                object obj = ResourceManager.GetObject("avUpload", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exit ähnelt.
        /// </summary>
        public static string Close {
            get {
                return ResourceManager.GetString("Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Company name ähnelt.
        /// </summary>
        public static string CompanyName {
            get {
                return ResourceManager.GetString("CompanyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap compress {
            get {
                object obj = ResourceManager.GetObject("compress", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connection Failed ähnelt.
        /// </summary>
        public static string ConnectionFailed {
            get {
                return ResourceManager.GetString("ConnectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copyright &amp;copy; 2021-2023 Manfred M&amp;#252;ller, ähnelt.
        /// </summary>
        public static string Copyright {
            get {
                return ResourceManager.GetString("Copyright", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error: Could not read the file. Original error:  ähnelt.
        /// </summary>
        public static string CouldNotReadTheFile {
            get {
                return ResourceManager.GetString("CouldNotReadTheFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decryption of {0} failed, please reinput. ähnelt.
        /// </summary>
        public static string DecryptionFailed {
            get {
                return ResourceManager.GetString("DecryptionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A small application for zipping and uploading a file to the Avast® whitelisting server. 
        ///The window is a topmost window, supports drag&amp;drop and stores it&apos;s last position.
        ///The program can be (un)linked to the users desktop and sendto context menu via the tray menu.
        ///Application settings including encrypted password can be stored under HKCU in the Windows™ registry.
        ///
        ///Choose file(s) via filechooser or drag&amp;drop (marked file(s) can be removed via right click). Click on the zip button to create the archive.  [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string Description {
            get {
                return ResourceManager.GetString("Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Desktop Link ähnelt.
        /// </summary>
        public static string DesktopLink {
            get {
                return ResourceManager.GetString("DesktopLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Directory &apos;{0}&apos; does not exist on the server. ähnelt.
        /// </summary>
        public static string Directory0DoesNotExistOnTheServer {
            get {
                return ResourceManager.GetString("Directory0DoesNotExistOnTheServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Directory Error ähnelt.
        /// </summary>
        public static string DirectoryError {
            get {
                return ResourceManager.GetString("DirectoryError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Done ähnelt.
        /// </summary>
        public static string Done {
            get {
                return ResourceManager.GetString("Done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Drop file(s) to upload here or use the file chooser ähnelt.
        /// </summary>
        public static string DropFileToUploadHere {
            get {
                return ResourceManager.GetString("DropFileToUploadHere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Email: ähnelt.
        /// </summary>
        public static string Email {
            get {
                return ResourceManager.GetString("Email", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encryption failed ähnelt.
        /// </summary>
        public static string EncryptionFailed {
            get {
                return ResourceManager.GetString("EncryptionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error ähnelt.
        /// </summary>
        public static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error: {0} ähnelt.
        /// </summary>
        public static string Error0 {
            get {
                return ResourceManager.GetString("Error0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error during FTP upload: {0} ähnelt.
        /// </summary>
        public static string ErrorDuringFTPUpload0 {
            get {
                return ResourceManager.GetString("ErrorDuringFTPUpload0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap exit {
            get {
                object obj = ResourceManager.GetObject("exit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to connect to the SFTP server. ähnelt.
        /// </summary>
        public static string FailedToConnectToTheSFTPServer {
            get {
                return ResourceManager.GetString("FailedToConnectToTheSFTPServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File(s): ähnelt.
        /// </summary>
        public static string Files {
            get {
                return ResourceManager.GetString("Files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File uploaded successfully! ähnelt.
        /// </summary>
        public static string FileUploadedSuccessfully {
            get {
                return ResourceManager.GetString("FileUploadedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap hide_password {
            get {
                object obj = ResourceManager.GetObject("hide_password", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap info {
            get {
                object obj = ResourceManager.GetObject("info", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Info About {0} {1} ähnelt.
        /// </summary>
        public static string InfoAbout {
            get {
                return ResourceManager.GetString("InfoAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key(s) not found! ähnelt.
        /// </summary>
        public static string KeySNotFound {
            get {
                return ResourceManager.GetString("KeySNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Minimize ähnelt.
        /// </summary>
        public static string Minimize {
            get {
                return ResourceManager.GetString("Minimize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No credentials found ähnelt.
        /// </summary>
        public static string NoCredentialsFound {
            get {
                return ResourceManager.GetString("NoCredentialsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No value found in the registry for key {0}. ähnelt.
        /// </summary>
        public static string NoValueFoundInTheRegistryForKey0 {
            get {
                return ResourceManager.GetString("NoValueFoundInTheRegistryForKey0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Password: ähnelt.
        /// </summary>
        public static string Password {
            get {
                return ResourceManager.GetString("Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pick file ähnelt.
        /// </summary>
        public static string PickFile {
            get {
                return ResourceManager.GetString("PickFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please register by using the following link: ähnelt.
        /// </summary>
        public static string PleaseRegisterByUsingTheLinkBelow {
            get {
                return ResourceManager.GetString("PleaseRegisterByUsingTheLinkBelow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Private key cannot be null or empty. ähnelt.
        /// </summary>
        public static string PrivateKeyCannotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("PrivateKeyCannotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Product name ähnelt.
        /// </summary>
        public static string ProductName {
            get {
                return ResourceManager.GetString("ProductName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Avast® whitelisting upload ähnelt.
        /// </summary>
        public static string ProgName {
            get {
                return ResourceManager.GetString("ProgName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Public key cannot be null or empty. ähnelt.
        /// </summary>
        public static string PublicKeyCannotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("PublicKeyCannotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap save {
            get {
                object obj = ResourceManager.GetObject("save", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select File ähnelt.
        /// </summary>
        public static string SelectFile {
            get {
                return ResourceManager.GetString("SelectFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Send to Link ähnelt.
        /// </summary>
        public static string SendToLink {
            get {
                return ResourceManager.GetString("SendToLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show ähnelt.
        /// </summary>
        public static string Show {
            get {
                return ResourceManager.GetString("Show", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap show_password {
            get {
                object obj = ResourceManager.GetObject("show_password", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show/Hide password ähnelt.
        /// </summary>
        public static string ShowHidePassword {
            get {
                return ResourceManager.GetString("ShowHidePassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create archive ähnelt.
        /// </summary>
        public static string ToolTipCompress {
            get {
                return ResourceManager.GetString("ToolTipCompress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save settings ähnelt.
        /// </summary>
        public static string ToolTipSaveSettings {
            get {
                return ResourceManager.GetString("ToolTipSaveSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upload ähnelt.
        /// </summary>
        public static string ToolTipUpload {
            get {
                return ResourceManager.GetString("ToolTipUpload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap underline {
            get {
                object obj = ResourceManager.GetObject("underline", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap upload {
            get {
                object obj = ResourceManager.GetObject("upload", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upload Error ähnelt.
        /// </summary>
        public static string UploadError {
            get {
                return ResourceManager.GetString("UploadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upload Success ähnelt.
        /// </summary>
        public static string UploadSuccess {
            get {
                return ResourceManager.GetString("UploadSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die URL: ähnelt.
        /// </summary>
        public static string URL {
            get {
                return ResourceManager.GetString("URL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Username: ähnelt.
        /// </summary>
        public static string Username {
            get {
                return ResourceManager.GetString("Username", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Version ähnelt.
        /// </summary>
        public static string Version {
            get {
                return ResourceManager.GetString("Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die whitelist.exe ähnelt.
        /// </summary>
        public static string WhitelistExe {
            get {
                return ResourceManager.GetString("WhitelistExe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Avast/AVG file whitelisting is a service provided mainly to software developers to reduce the risk of false positive detections.
        ///
        ///When you join the Whitelisting Program and submit an application file, the Avast Threat Labs analysts review the software for malicious or unwanted activity. Applications that are both free from malware and meet our guidelines for application transparency can be whitelisted. If determined clean, the submitted file is moved to our set of approved files to ensure it is no longer  [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string WhitelistingServiceDescription {
            get {
                return ResourceManager.GetString("WhitelistingServiceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Working... ähnelt.
        /// </summary>
        public static string Working {
            get {
                return ResourceManager.GetString("Working", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die .zip created ähnelt.
        /// </summary>
        public static string ZipCreated {
            get {
                return ResourceManager.GetString("ZipCreated", resourceCulture);
            }
        }
    }
}
